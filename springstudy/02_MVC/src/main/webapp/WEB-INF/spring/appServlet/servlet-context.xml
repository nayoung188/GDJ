<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--  
		정적 자원을 관리하는 디렉터리를 미리 정해둔다.
		images, audio, videos, css, js 등  
		원하면 디렉터리를 추가할 수 있다
	-->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/assets/**" location="/assets/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--  
		컨트롤러에서 return "index";가 넘어오면
		prefix(앞에 붙이는 말) "/WEB/INF/views/"를 "index"에 붙이고, 
		suffix(뒤에 붙이는 말) ".jsp"를 "index"에 붙인다.
		최종적으로 응답할 뷰의 경로는 
		"/WEB/INF/views/index.jsp"로 처리된다.
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!--  
		1. component=scan에 등록된 패키지에 있는 @Component를 자동으로 Bean으로 등록한다.
			@Component의 종류 : @Controller, @Service, @Repository
		2. 모든 구성 요소는 base-package 내부에 작성한다.
			com.gdu.app02.controller
			com.gdu.app02.service
			com.gdu.app02.repository
			com.gdu.app02.domain
			com.gdu.app02.common
		※ 주의사항
			com.gdu.app02 패키지에 controller 패키지를 추가한다 (O)
			com.gdu.app02 패키지의 이름을 com.gdu.app02.controller로 바꾼다 (X)	
	-->
	<context:component-scan base-package="com.gdu.app02" />
	
	
	
</beans:beans>
