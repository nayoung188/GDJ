<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.app13.mapper.UserMapper">
	
	<select id="selectUserById" parameterType="String" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE
		FROM USERS
		WHERE ID = #{id}
	</select>
	
	<select id="selectRetireUserById" parameterType="String" resultType="RetireUserDTO">
		SELECT ID
		FROM RETIRE_USERS
		WHERE ID = #{id}
	</select>

	<select id="selectUserByEmail" parameterType="String" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE
		FROM USERS
		WHERE EMAIL = #{email}
	</select>	
	
	<!-- 일반회원가입 -->
	<insert id="insertUser" parameterType="UserDTO">
		INSERT INTO USERS
			(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE)
		VALUES
			(USERS_SEQ.NEXTVAL, #{id}, #{pw}, #{name}, #{gender}, #{email}, #{mobile}, #{birthyear}, #{birthday}, #{postcode}, #{roadAddress}, #{jibunAddress}, #{detailAddress}, #{extraAddress}, #{agreeCode}, NULL, SYSDATE, SYSDATE, SYSDATE, NULL, NULL)	 
	</insert>
	
	<!-- 로그인 기록(ACCESS_LOG) 남기기 -->	
	<update id="updateAccessLog"  parameterType="String">
		UPDATE ACCESS_LOG
			SET LAST_LOGIN_DATE = SYSDATE
			WHERE ID = #{id}
	</update>
	<insert id="insertAccessLog" parameterType="String">
		INSERT INTO ACCESS_LOG
			(ACCESS_LOG_NO, ID, LAST_LOGIN_DATE)
		VALUES
			(ACCESS_LOG_SEQ.NEXTVAL, #{id}, SYSDATE)
	</insert>
	
	<!-- 회원탈퇴1 : USER 테이블에서 제거 -->
	<delete id="deleteUser" parameterType="int">
		DELETE
			FROM USERS
		WHERE USER_NO = #{user_no}
	</delete>

	<!-- 회원탈퇴2 : RETIRE_USERS 테이블에 추가 -->
	<insert id="insertRetireUser" parameterType="RetireUserDTO">
		INSERT INTO RETIRE_USERS
			(USER_NO, ID, JOIN_DATE, RETIRE_DATE)
		VALUES
			(#{userNo}, #{id}, #{joinDate}, SYSDATE)
	</insert>
	
	<!-- 로그인 -->
	<select id="selectUserByIdPw" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE
		  FROM USERS
		 WHERE ID = #{id}
		   AND PW = #{pw}
	</select>
	
	
	
</mapper>













